{
  "address": "0x5982cE3554B18a5CF02169049e81ec43BFB73961",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nns",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ens",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ens",
      "outputs": [
        {
          "internalType": "contract ENS",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nns",
      "outputs": [
        {
          "internalType": "contract ENS",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "resolve",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2b3f556b0567043fd80f8ac0af9c47d6097b28f8c90dd424819cc47376380259",
  "receipt": {
    "to": null,
    "from": "0xE5358CaB95014E2306815743793F16c93a8a5C70",
    "contractAddress": "0x5982cE3554B18a5CF02169049e81ec43BFB73961",
    "transactionIndex": 89,
    "gasUsed": "428590",
    "logsBloom": "0x
    "blockHash": "0xdb15ad5d0b24acab3224b1e7411864534d8d1df0f38288dd63f69c9b458470e3",
    "transactionHash": "0x2b3f556b0567043fd80f8ac0af9c47d6097b28f8c90dd424819cc47376380259",
    "logs": [],
    "blockNumber": 15271299,
    "cumulativeGasUsed": "10104019",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3e1970dC478991b49c4327973eA8A4862eF5A4DE",
    "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
  ],
  "numDeployments": 1,
  "solcInputHash": "037b4beb0f74b8fd0a7d335a48c5a269",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nns\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ens\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nns\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"resolve\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/NNSENSReverseResolver.sol\":\"NNSENSReverseResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/registry/ENS.sol\":{\"content\":\"pragma solidity >=0.8.4;\\n\\ninterface ENS {\\n    // Logged when the owner of a node assigns a new owner to a subnode.\\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n    // Logged when the owner of a node transfers ownership to a new account.\\n    event Transfer(bytes32 indexed node, address owner);\\n\\n    // Logged when the resolver for a node changes.\\n    event NewResolver(bytes32 indexed node, address resolver);\\n\\n    // Logged when the TTL of a node changes\\n    event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n    // Logged when an operator is added or removed.\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n\\n    function setRecord(\\n        bytes32 node,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeRecord(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner,\\n        address resolver,\\n        uint64 ttl\\n    ) external;\\n\\n    function setSubnodeOwner(\\n        bytes32 node,\\n        bytes32 label,\\n        address owner\\n    ) external returns (bytes32);\\n\\n    function setResolver(bytes32 node, address resolver) external;\\n\\n    function setOwner(bytes32 node, address owner) external;\\n\\n    function setTTL(bytes32 node, uint64 ttl) external;\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    function owner(bytes32 node) external view returns (address);\\n\\n    function resolver(bytes32 node) external view returns (address);\\n\\n    function ttl(bytes32 node) external view returns (uint64);\\n\\n    function recordExists(bytes32 node) external view returns (bool);\\n\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xf79be82c1a2eb0a77fba4e0972221912e803309081ca460fd2cf61653e55758a\"},\"contracts/resolvers/profiles/INameResolver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.4;\\n\\ninterface INameResolver {\\n    event NameChanged(bytes32 indexed node, string name);\\n\\n    /**\\n     * Returns the name associated with an ENS node, for reverse records.\\n     * Defined in EIP181.\\n     * @param node The ENS node to query.\\n     * @return The associated name.\\n     */\\n    function name(bytes32 node) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x9ec392b612447b1acbdc01114f2da2837a658d3f3157f60a99c5269f0b623346\",\"license\":\"MIT\"},\"contracts/utils/NNSENSReverseResolver.sol\":{\"content\":\"pragma solidity >=0.8.4;\\nimport {ENS} from '../registry/ENS.sol';\\nimport {INameResolver} from '../resolvers/profiles/INameResolver.sol';\\n\\ncontract NNSENSReverseResolver {\\n  bytes32 private constant ADDR_REVERSE_NODE =\\n    0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\\n  bytes32 private constant ZERO_ADDRESS =\\n    0x918d5359431a7007dec0d4722530b0726c0e1010a959bd8b871a6a5d6337144a;\\n\\n  ENS public immutable ens;\\n  ENS public immutable nns;\\n\\n  constructor(address _nns, address _ens) {\\n    nns = ENS(_nns);\\n    ens = ENS(_ens);\\n  }\\n\\n  function resolve(address addr) public view returns (string memory) {\\n    string memory name = _resolve(addr, nns);\\n    if (bytes(name).length == 0 && address(ens) != address(0)) {\\n      return _resolve(addr, ens);\\n    }\\n    return name;\\n  }\\n\\n  function _resolve(address addr, ENS registry)\\n    private\\n    view\\n    returns (string memory)\\n  {\\n    bytes32 n = node(addr);\\n    address resolverAddress = registry.resolver(n);\\n    if (resolverAddress == address(0)) {\\n      return '';\\n    }\\n    INameResolver resolver = INameResolver(resolverAddress);\\n    string memory name = resolver.name(n);\\n    if (\\n      bytes(name).length == 0 ||\\n      keccak256(abi.encodePacked(name)) == ZERO_ADDRESS\\n    ) {\\n      return '';\\n    }\\n    return name;\\n  }\\n\\n  function node(address addr) private pure returns (bytes32) {\\n    return keccak256(abi.encodePacked(ADDR_REVERSE_NODE, sha3HexAddress(addr)));\\n  }\\n\\n  function sha3HexAddress(address addr) private pure returns (bytes32 ret) {\\n    addr;\\n    ret; // Stop warning us about unused variables\\n    assembly {\\n      let\\n        lookup\\n      := 0x3031323334353637383961626364656600000000000000000000000000000000\\n\\n      for {\\n        let i := 40\\n      } gt(i, 0) {\\n\\n      } {\\n        i := sub(i, 1)\\n        mstore8(i, byte(and(addr, 0xf), lookup))\\n        addr := div(addr, 0x10)\\n        i := sub(i, 1)\\n        mstore8(i, byte(and(addr, 0xf), lookup))\\n        addr := div(addr, 0x10)\\n      }\\n\\n      ret := keccak256(0, 40)\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x778f896098f9919b6969f087defd5652810dd1e8a901b0de515865a6fcab424b\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161079338038061079383398101604081905261002f91610062565b6001600160a01b0391821660a05216608052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a0516106c76100cc6000396000818160bc015260e8015260008181604b0152818161011c015261015f01526106c76000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633f15457f1461004657806355ea6c4714610097578063c358133b146100b7575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100aa6100a53660046104c0565b6100de565b60405161008e919061050d565b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6060600061010c837f0000000000000000000000000000000000000000000000000000000000000000610190565b90508051600014801561015457507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1615155b1561018a57610183837f0000000000000000000000000000000000000000000000000000000000000000610190565b9392505050565b92915050565b6060600061019d846103a0565b6040517f0178b8bf0000000000000000000000000000000000000000000000000000000081526004810182905290915060009073ffffffffffffffffffffffffffffffffffffffff851690630178b8bf90602401602060405180830381865afa15801561020e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610232919061055e565b905073ffffffffffffffffffffffffffffffffffffffff811661026857604051806020016040528060008152509250505061018a565b6040517f691f343100000000000000000000000000000000000000000000000000000000815260048101839052819060009073ffffffffffffffffffffffffffffffffffffffff83169063691f343190602401600060405180830381865afa1580156102d8573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261031e91908101906105aa565b905080516000148061037657506040517f918d5359431a7007dec0d4722530b0726c0e1010a959bd8b871a6a5d6337144a9061035e908390602001610675565b60405160208183030381529060405280519060200120145b15610396576040518060200160405280600081525094505050505061018a565b9695505050505050565b60007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e26103cc836103fb565b604080516020810193909352820152606001604051602081830303815290604052805190602001209050919050565b60007f303132333435363738396162636465660000000000000000000000000000000060285b801561048e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01600f841682901a81536010909304927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01600f841682901a8153601084049350610421565b5050602860002092915050565b73ffffffffffffffffffffffffffffffffffffffff811681146104bd57600080fd5b50565b6000602082840312156104d257600080fd5b81356101838161049b565b60005b838110156104f85781810151838201526020016104e0565b83811115610507576000848401525b50505050565b602081526000825180602084015261052c8160408501602087016104dd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006020828403121561057057600080fd5b81516101838161049b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156105bc57600080fd5b815167ffffffffffffffff808211156105d457600080fd5b818401915084601f8301126105e857600080fd5b8151818111156105fa576105fa61057b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156106405761064061057b565b8160405282815287602084870101111561065957600080fd5b61066a8360208301602088016104dd565b979650505050505050565b600082516106878184602087016104dd565b919091019291505056fea264697066735822122042145b9e9bb9dae7747de29eaac89c5e8a0334b3126aeb2fb687b0e2534ba79c64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80633f15457f1461004657806355ea6c4714610097578063c358133b146100b7575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100aa6100a53660046104c0565b6100de565b60405161008e919061050d565b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6060600061010c837f0000000000000000000000000000000000000000000000000000000000000000610190565b90508051600014801561015457507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1615155b1561018a57610183837f0000000000000000000000000000000000000000000000000000000000000000610190565b9392505050565b92915050565b6060600061019d846103a0565b6040517f0178b8bf0000000000000000000000000000000000000000000000000000000081526004810182905290915060009073ffffffffffffffffffffffffffffffffffffffff851690630178b8bf90602401602060405180830381865afa15801561020e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610232919061055e565b905073ffffffffffffffffffffffffffffffffffffffff811661026857604051806020016040528060008152509250505061018a565b6040517f691f343100000000000000000000000000000000000000000000000000000000815260048101839052819060009073ffffffffffffffffffffffffffffffffffffffff83169063691f343190602401600060405180830381865afa1580156102d8573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261031e91908101906105aa565b905080516000148061037657506040517f918d5359431a7007dec0d4722530b0726c0e1010a959bd8b871a6a5d6337144a9061035e908390602001610675565b60405160208183030381529060405280519060200120145b15610396576040518060200160405280600081525094505050505061018a565b9695505050505050565b60007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e26103cc836103fb565b604080516020810193909352820152606001604051602081830303815290604052805190602001209050919050565b60007f303132333435363738396162636465660000000000000000000000000000000060285b801561048e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01600f841682901a81536010909304927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01600f841682901a8153601084049350610421565b5050602860002092915050565b73ffffffffffffffffffffffffffffffffffffffff811681146104bd57600080fd5b50565b6000602082840312156104d257600080fd5b81356101838161049b565b60005b838110156104f85781810151838201526020016104e0565b83811115610507576000848401525b50505050565b602081526000825180602084015261052c8160408501602087016104dd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006020828403121561057057600080fd5b81516101838161049b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156105bc57600080fd5b815167ffffffffffffffff808211156105d457600080fd5b818401915084601f8301126105e857600080fd5b8151818111156105fa576105fa61057b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156106405761064061057b565b8160405282815287602084870101111561065957600080fd5b61066a8360208301602088016104dd565b979650505050505050565b600082516106878184602087016104dd565b919091019291505056fea264697066735822122042145b9e9bb9dae7747de29eaac89c5e8a0334b3126aeb2fb687b0e2534ba79c64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}